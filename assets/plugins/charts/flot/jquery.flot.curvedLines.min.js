!function(a){function c(a){function b(a,b){b.series.curvedLines.active&&a.hooks.processDatapoints.unshift(c)}function c(a,b,c){var e=c.points.length/c.pointsize,f=.005,g=h(b.curvedLines);if(!g&&1==b.curvedLines.apply&&void 0===b.originSeries&&e>1+f)if(b.lines.fill){var i=d(c,b.curvedLines,1),j=d(c,b.curvedLines,2);c.pointsize=3,c.points=[];for(var k=0,l=0,m=0,n=2;m<i.length||k<j.length;)i[m]==j[k]?(c.points[l]=i[m],c.points[l+1]=i[m+1],c.points[l+2]=j[k+1],k+=n,m+=n):i[m]<j[k]?(c.points[l]=i[m],c.points[l+1]=i[m+1],c.points[l+2]=l>0?c.points[l-1]:null,m+=n):(c.points[l]=j[k],c.points[l+1]=l>1?c.points[l-2]:null,c.points[l+2]=j[k+1],k+=n),l+=3}else b.lines.lineWidth>0&&(c.points=d(c,b.curvedLines,1),c.pointsize=2)}function d(a,b,c){if("undefined"!=typeof b.legacyOverride&&0!=b.legacyOverride){var d={fit:!1,curvePointFactor:20,fitPointDist:void 0},f=jQuery.extend(d,b.legacyOverride);return g(a,f,c)}return e(a,b,c)}function e(a,b,c){for(var d=a.points,e=a.pointsize,g=f(a,b,c),h=[],i=0,j=0;j<d.length-e;j+=e){var k=j,l=j+c,m=d[k],n=d[k+e],o=(n-m)/Number(b.nrSplinePoints);h.push(d[k]),h.push(d[l]);for(var p=m+=o;p<n;p+=o)h.push(p),h.push(g[i](p));i++}return h.push(d[d.length-e]),h.push(d[d.length-e+c]),h}function f(a,b,c){for(var d=a.points,e=a.pointsize,f=[],g=[],h=0;h<d.length-e;h+=e){var i=h,j=h+c,k=d[i+e]-d[i],l=d[j+e]-d[j];f.push(k),g.push(l/k)}var m=[g[0]];if(b.monotonicFit)for(var h=1;h<f.length;h++){var n=g[h],o=g[h-1];if(n*o<=0)m.push(0);else{var p=f[h],q=f[h-1],r=p+q;m.push(3*r/((r+p)/o+(r+q)/n))}}else for(var h=e;h<d.length-e;h+=e){var i=h,j=h+c;m.push(Number(b.tension)*(d[j+e]-d[j-e])/(d[i+e]-d[i-e]))}m.push(g[g.length-1]);var s=[],t=[];for(h=0;h<f.length;h++){var u=m[h],v=m[h+1],n=g[h],w=1/f[h],r=u+v-n-n;s.push(r*w*w),t.push((n-r-u)*w)}for(var x=[],h=0;h<f.length;h++){var y=function(a,b,c,d,e){return function(f){var g=f-a,h=g*g;return b*g*h+c*h+d*g+e}};x.push(y(d[h*e],s[h],t[h],m[h],d[h*e+c]))}return x}function g(a,b,c){var d=a.points,e=a.pointsize,f=Number(b.curvePointFactor)*(d.length/e),g=new Array,h=new Array,i=-1,j=-1,k=0;if(b.fit){var l;if("undefined"==typeof b.fitPointDist){var m=d[0],n=d[d.length-e];l=(n-m)/5e4}else l=Number(b.fitPointDist);for(var o=0;o<d.length;o+=e){var p,q;i=o,j=o+c,p=d[i]-l,q=d[i]+l;for(var r=2;p==d[i]||q==d[i];)p=d[i]-l*r,q=d[i]+l*r,r++;g[k]=p,h[k]=d[j],k++,g[k]=d[i],h[k]=d[j],k++,g[k]=q,h[k]=d[j],k++}}else for(var o=0;o<d.length;o+=e)i=o,j=o+c,g[k]=d[i],h[k]=d[j],k++;var s=g.length,t=new Array,u=new Array;t[0]=0,t[s-1]=0,u[0]=0;for(var o=1;o<s-1;++o){var v=g[o+1]-g[o-1];if(0==v)return[];var w=(g[o]-g[o-1])/v,x=w*t[o-1]+2;t[o]=(w-1)/x,u[o]=(h[o+1]-h[o])/(g[o+1]-g[o])-(h[o]-h[o-1])/(g[o]-g[o-1]),u[o]=(6*u[o]/(g[o+1]-g[o-1])-w*u[o-1])/x}for(var k=s-2;k>=0;--k)t[k]=t[k]*t[k+1]+u[k];var y=(g[s-1]-g[0])/(f-1),z=new Array,A=new Array,B=new Array;for(z[0]=g[0],A[0]=h[0],B.push(z[0]),B.push(A[0]),k=1;k<f;++k){z[k]=z[0]+k*y;for(var C=s-1,D=0;C-D>1;){var E=Math.round((C+D)/2);g[E]>z[k]?C=E:D=E}var F=g[C]-g[D];if(0==F)return[];var G=(g[C]-z[k])/F,H=(z[k]-g[D])/F;A[k]=G*h[D]+H*h[C]+((G*G*G-G)*t[D]+(H*H*H-H)*t[C])*F*F/6,B.push(z[k]),B.push(A[k])}return B}function h(a){if("undefined"!=typeof a.fit||"undefined"!=typeof a.curvePointFactor||"undefined"!=typeof a.fitPointDist)throw new Error("CurvedLines detected illegal parameters. The CurvedLines API changed with version 1.0.0 please check the options object.");return!1}a.hooks.processOptions.push(b)}var b={series:{curvedLines:{active:!1,apply:!1,monotonicFit:!1,tension:.5,nrSplinePoints:20,legacyOverride:void 0}}};a.plot.plugins.push({init:c,options:b,name:"curvedLines",version:"1.1.1"})}(jQuery);